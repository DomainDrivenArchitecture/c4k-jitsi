apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: NAMESPACE
  name: jitsi-meet-jvb
  labels:
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/component: jvb
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: jitsi-meet
      app.kubernetes.io/component: jvb
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jitsi-meet
        app.kubernetes.io/component: jvb
    spec:
      serviceAccountName: jitsi-meet
      securityContext:
        {}
      initContainers:
        - name: wait-for-prosody
          image: curlimages/curl:latest
          command: ["/bin/sh","-c"]
          args: ["while [ $(curl -sw '%{http_code}' http://prosody:5280 -o /dev/null) -ne 200 ]; do sleep 5; echo 'Waiting for the prosody...'; done"]
      containers:
        - name: jitsi-meet
          securityContext:
            {}
          image: "jitsi/jvb:stable-10008"
          imagePullPolicy: IfNotPresent
          envFrom:
          - secretRef:
              name: prosody-jvb
          - configMapRef:
              name: prosody-common
          - configMapRef:
              name: jitsi-meet-jvb
          env:
          - name: DOCKER_HOST_ADDRESS
            value: REPLACE_JITSI_FQDN
          - name: JVB_ADVERTISE_IPS
            value: REPLACE_JITSI_FQDN
          - name: JVB_WS_SERVER_ID
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          ports:
            - name: rtp-udp
              containerPort: 10000
              protocol: UDP
            - name: colibri-ws-tcp
              containerPort: 9090
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /about/health
              port: 8080
          readinessProbe:
            httpGet:
              path: /about/health
              port: 8080
          resources:
            {}
